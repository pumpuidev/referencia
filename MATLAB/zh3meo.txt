% zh3a - 1 ---------------------------------------------

function [egyes, nulla] = binaris(x)
% A megadott bináris x vektorban megszámolja hány 1-es van.
% Teszt hívás: [e, n] = binaris([1,0,1,1])
% Teszt hívás: [e, n] = binaris([1,0,2,1])

n = length(x);
egyes = 0;
nulla = 0;
for i = 1:n,
if x(i) == 1, egyes = egyes + 1;
	 elseif x(i) == 0, nulla = nulla + 1;
                   else disp('Van nem bináris elem a vektorban.')
end
end
end 


% zh3a - 2 ---------------------------------------------

function gyok = polgyok(p)
% Kirajzolja a megadott polinomot és meghatározza a gyökeit.
% Teszt hívás: gy = polgyok([2,3,-1])

gyok = roots(p);
xx = linspace(-5,5,100);
yy = polyval(p,xx);
plot(xx,yy)
end 


%-------------------------------------------------------
%-------------------------------------------------------

% zh3b - 1 ---------------------------------------------

function [poz, neg, nulla] = valogat(x)
% A megadott bináris x vektorból szétválogatja a 
% pozitv, negatív illetve nulla elemeket külön vektorokba.
% Teszt hívás: [p, n, o] = valogat([1,0,-1,2])
% Teszt hívás: [p, n, o] = valogat([1,3,1,2])

n = length(x);
poz = [];
neg = [];
nulla = [];
for i = 1:n,
if x(i) > 0, poz = [poz, x(i)];
	 elseif x(i) == 0, nulla = [nulla, x(i)];
                   else neg = [neg, x(i)];
end
end
end 


% zh2b - 2 ---------------------------------------------

function p = poli(gyok)
% A gyökökbõl elõállítja a polinomot és kirajzolja.
% Teszt hívás: pol = poli([-2,3,-1])

p = poly(gyok);
xx = linspace(-5,5,100);
yy = polyval(p,xx);
plot(xx,yy)
end 

%---------------------------------------------------------